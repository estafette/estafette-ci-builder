// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package builder is a generated GoMock package.
package builder

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// RunReadinessProbe mocks base method
func (m *MockService) RunReadinessProbe(protocol, host string, port int, path, hostname string, timeoutSeconds int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RunReadinessProbe", protocol, host, port, path, hostname, timeoutSeconds)
}

// RunReadinessProbe indicates an expected call of RunReadinessProbe
func (mr *MockServiceMockRecorder) RunReadinessProbe(protocol, host, port, path, hostname, timeoutSeconds interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunReadinessProbe", reflect.TypeOf((*MockService)(nil).RunReadinessProbe), protocol, host, port, path, hostname, timeoutSeconds)
}

// RunEstafetteBuildJob mocks base method
func (m *MockService) RunEstafetteBuildJob(runAsJob bool) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RunEstafetteBuildJob", runAsJob)
}

// RunEstafetteBuildJob indicates an expected call of RunEstafetteBuildJob
func (mr *MockServiceMockRecorder) RunEstafetteBuildJob(runAsJob interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunEstafetteBuildJob", reflect.TypeOf((*MockService)(nil).RunEstafetteBuildJob), runAsJob)
}
