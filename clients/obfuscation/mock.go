// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package obfuscation is a generated GoMock package.
package obfuscation

import (
	manifest "github.com/estafette/estafette-ci-manifest"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// CollectSecrets mocks base method
func (m *MockClient) CollectSecrets(manifest manifest.EstafetteManifest, credentialsBytes []byte, pipeline string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CollectSecrets", manifest, credentialsBytes, pipeline)
	ret0, _ := ret[0].(error)
	return ret0
}

// CollectSecrets indicates an expected call of CollectSecrets
func (mr *MockClientMockRecorder) CollectSecrets(manifest, credentialsBytes, pipeline interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CollectSecrets", reflect.TypeOf((*MockClient)(nil).CollectSecrets), manifest, credentialsBytes, pipeline)
}

// Obfuscate mocks base method
func (m *MockClient) Obfuscate(input string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Obfuscate", input)
	ret0, _ := ret[0].(string)
	return ret0
}

// Obfuscate indicates an expected call of Obfuscate
func (mr *MockClientMockRecorder) Obfuscate(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Obfuscate", reflect.TypeOf((*MockClient)(nil).Obfuscate), input)
}

// ObfuscateSecrets mocks base method
func (m *MockClient) ObfuscateSecrets(input string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObfuscateSecrets", input)
	ret0, _ := ret[0].(string)
	return ret0
}

// ObfuscateSecrets indicates an expected call of ObfuscateSecrets
func (mr *MockClientMockRecorder) ObfuscateSecrets(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObfuscateSecrets", reflect.TypeOf((*MockClient)(nil).ObfuscateSecrets), input)
}
